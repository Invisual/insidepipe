{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/types/txtLnk.js","webpack://gatsby-starter-default/./src/pages/index.js"],"names":["data","dark","inv","img","useBreakpoint","mobile","imgM","childImageSharp","gatsbyImageData","StyledTxtLnk","className","font","Array","isArray","title","style","fontStyle","text","map","i","undefined","key","btnTxt","to","btnLink","styled","props","css","indexJson","homelinks","height","light"],"mappings":"kMAwBA,IAhBe,SAAC,GAAuB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,IAC3B,OACE,gBAAC,IAAD,CAAWC,KAAMC,UAAgBC,OAAoDL,EAAKM,KAAKC,gBAAgBC,gBAArER,EAAKG,IAAII,gBAAgBC,iBACjE,gBAACC,EAAD,CAAcP,IAAKA,IAAQA,GACzB,sBAAIQ,UAAYT,EAA4BU,KAAU,oBAA/BA,KAAU,UAA2CC,MAAMC,QAAQb,EAAKc,OAAS,4BAAOd,EAAKc,MAAM,GAAG,wBAAMC,MAAO,CAACC,UAAW,WAAYhB,EAAKc,MAAM,KAAoBd,EAAKc,OACtM,qBAAGJ,UAAYT,EAA2BU,KAAU,aAA9BA,KAAU,SAC7BX,EAAKiB,KAAKC,KAAI,SAAClB,EAAMmB,GAAP,OACb,wBAAMT,UAAWS,EAAE,GAAI,EAAIR,KAAU,aAAUS,EAAWC,IAAK,YAAcF,GAAInB,OAGpFA,EAAKsB,QAAU,gBAAC,IAAD,CAAYC,GAAIvB,EAAKwB,QAASd,UAAWC,KAASV,KAAMA,IAASA,GAAOD,EAAKsB,WAQrG,IAAMb,EAAegB,oBAAH,4DAAGA,CAAH,2OAKd,SAAAC,GAAK,OACLA,EAAMxB,MACNyB,QADA,yBAqBE,SAAAD,GAAK,OACLA,EAAMxB,MACNyB,QADA,yB,qFCnCN,UAZkB,SAAC,GAAD,IAAE3B,EAAF,EAAEA,KAAF,OAChB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKc,MAAM,SACVd,EAAK4B,UAAUC,UAAUX,KAAI,SAAClB,EAAMmB,GAAP,OAC5B,uBAAKE,IAAKF,GACH,IAAJA,GAAS,uBAAKJ,MAAO,CAACe,OAAQ,UAC/B,gBAAC,IAAD,CAAQ9B,KAAMA,EAAM+B,OAAK","file":"component---src-pages-index-js-53b1b09d2b6b1e1cc8c3.js","sourcesContent":["import React from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\nimport * as font from \"../../fonts/fonts.module.scss\"\r\nimport Container from \"../bannerMOD/bannerMOD\"\r\nimport ButtonLink from \"../layout/linkBtns\"\r\n\r\nimport { useBreakpoint } from \"gatsby-plugin-breakpoints\"\r\n\r\nconst TxtLnk = ({data, dark, inv}) => {\r\n  return(\r\n    <Container img={!useBreakpoint().mobile ? data.img.childImageSharp.gatsbyImageData : data.imgM.childImageSharp.gatsbyImageData}>\r\n      <StyledTxtLnk inv={inv && +inv}>\r\n        <h3 className={!dark ? font.aH + \" title\" : font.aH + \" title dark-title\"}>{Array.isArray(data.title) ? <span>{data.title[0]}<span style={{fontStyle: \"italic\"}}>{data.title[1]}</span></span> : data.title}</h3>\r\n        <p className={!dark ? font.aB + \" text\" : font.aB + \" text dark\"}>\r\n          {data.text.map((data, i)=>(\r\n            <span className={i%2!==0 ? font.aM + \" bold\" : undefined} key={\"paragraph\" + i}>{data}</span>\r\n          ))}\r\n        </p>\r\n        {data.btnTxt && <ButtonLink to={data.btnLink} className={font.aH} dark={dark && +dark}>{data.btnTxt}</ButtonLink>}\r\n      </StyledTxtLnk>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TxtLnk\r\n\r\nconst StyledTxtLnk = styled.div`\r\n  position: relative;\r\n  width: 25%;\r\n  margin-left: 5%;\r\n  color: #ffffff;\r\n  ${props =>\r\n    props.inv &&\r\n    css`\r\n      margin-left: 70%;\r\n    `\r\n  }\r\n  .text{\r\n    margin: 2em 0;\r\n    white-space: pre-wrap;\r\n    .bold{\r\n      font-weight: bold;\r\n    }\r\n  }\r\n  .dark{\r\n    color: #000000;\r\n  }\r\n  .dark-title{\r\n    color: #006a71;\r\n  }\r\n  \r\n  @media only screen and (max-width: 768px){\r\n    width: 80%;\r\n    ${props =>\r\n      props.inv &&\r\n      css`\r\n        margin-left: 5%;\r\n      `\r\n    }\r\n  }\r\n`","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout/layout\"\r\nimport Seo from \"../components/layout/seo\"\r\nimport TxtLnk from \"../components/types/txtLnk\"\r\n\r\nconst IndexPage = ({data}) => (\r\n  <Layout>\r\n    <Seo title=\"Home\"/>\r\n    {data.indexJson.homelinks.map((data, i)=>(\r\n      <div key={i}>\r\n        {i!==0 && <div style={{height: \"10px\"}}/>}\r\n        <TxtLnk data={data} light/>\r\n      </div>\r\n    ))}\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n\r\nexport const Json = graphql`\r\n  query index {\r\n    indexJson{\r\n      homelinks{\r\n        img{\r\n          childImageSharp{\r\n            gatsbyImageData(\r\n              placeholder: BLURRED\r\n              formats: [AUTO, WEBP, AVIF]\r\n              width: 3840\r\n            )\r\n          }\r\n        }\r\n        imgM{\r\n          childImageSharp{\r\n            gatsbyImageData(\r\n              placeholder: BLURRED\r\n              formats: [AUTO, WEBP, AVIF]\r\n              width: 3840\r\n            )\r\n          }\r\n        }\r\n        title\r\n        text\r\n        btnLink\r\n        btnTxt\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}