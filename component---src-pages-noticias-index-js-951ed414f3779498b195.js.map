{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/types/post.js","webpack://gatsby-starter-default/./src/pages/noticias/index.js"],"names":["data","slug","selected","text","useState","open","setOpen","img","useBreakpoint","mobile","imageM","childImageSharp","gatsbyImageData","image","StyledPost","className","font","title","onClick","window","location","hash","btn","AnimateHeight","duration","height","StyledContent","dangerouslySetInnerHTML","__html","styled","allMarkdownRemark","edges","map","i","key","id","node","fields","style","frontmatter","html"],"mappings":"4QAuCA,EA5Ba,SAAC,GAAkC,IAAjCA,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,KACnC,GAAwBC,cAASF,IAAW,IAAMD,GAA3CI,EAAP,KAAaC,EAAb,KASA,OACE,gCACA,gBAAC,IAAD,CAAWC,KAAMC,UAAgBC,OAAsDT,EAAKU,OAAOC,gBAAgBC,gBAAzEZ,EAAKa,MAAMF,gBAAgBC,iBACnE,gBAACE,EAAD,KACE,sBAAIC,UAAWC,KAAU,UAAWhB,EAAKiB,OACzC,gBAAC,IAAD,CAAQC,QAZE,WACVb,GAA0B,oBAAXc,SACjBA,OAAOC,SAASC,KAAOpB,GAEzBK,GAASD,IAQqBU,UAAWC,MAAUhB,EAAKsB,OAIxD,gBAACC,EAAA,EAAD,CAAeC,SAAU,IAAKC,OAAQpB,EAAO,OAAS,EAAGU,UAAU,WACjE,gBAACW,EAAD,CACEC,wBAAyB,CAAEC,OAAQzB,QASrCW,EAAae,oBAAH,2DAAGA,CAAH,6IAcVH,EAAgBG,oBAAH,8DAAGA,CAAH,iWChCnB,EAhBqB,SAAC,GAAY,IAAX7B,EAAU,EAAVA,KACfqB,EAAyB,oBAAXF,OAAyBA,OAAOC,SAASC,KAAO,GAEpE,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKJ,MAAM,aACVjB,EAAK8B,kBAAkBC,MAAMC,KAAI,SAAChC,EAAMiC,GAAP,OAChC,uBAAKC,IAAK,QAAUD,EAAGE,GAAInC,EAAKoC,KAAKC,OAAOpC,MACrC,IAAJgC,GAAS,uBAAKK,MAAO,CAACb,OAAQ,UAC/B,gBAAC,EAAD,CAAMzB,KAAMA,EAAKoC,KAAKG,YAAatC,KAAMD,EAAKoC,KAAKC,OAAOpC,KAAMC,SAAUmB,EAAMlB,KAAMH,EAAKoC,KAAKI","file":"component---src-pages-noticias-index-js-951ed414f3779498b195.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport * as font from \"../../fonts/fonts.module.scss\"\r\nimport Container from \"../bannerMOD/bannerMOD\"\r\nimport { Button } from \"../layout/linkBtns\"\r\nimport AnimateHeight from 'react-animate-height';\r\n\r\nimport { useBreakpoint } from \"gatsby-plugin-breakpoints\"\r\n\r\nimport \"./posts.css\"\r\n\r\nconst Post = ({data, slug, selected, text}) => {\r\n  const [open, setOpen] = useState(selected===\"#\" + slug);\r\n  \r\n  const setPost = () => {\r\n    if(!open && typeof window !== 'undefined'){\r\n      window.location.hash = slug;\r\n    }\r\n    setOpen(!open);\r\n  }\r\n  \r\n  return(\r\n    <>\r\n    <Container img={!useBreakpoint().mobile ? data.image.childImageSharp.gatsbyImageData : data.imageM.childImageSharp.gatsbyImageData}>\r\n      <StyledPost>\r\n        <h3 className={font.aH + \" title\"}>{data.title}</h3>\r\n        <Button onClick={setPost} className={font.aH}>{data.btn}</Button>\r\n      </StyledPost>\r\n    </Container>\r\n\r\n    <AnimateHeight duration={600} height={open ? \"auto\" : 0} className=\"content\">\r\n      <StyledContent\r\n        dangerouslySetInnerHTML={{ __html: text }}\r\n      />\r\n    </AnimateHeight>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Post\r\n\r\nconst StyledPost = styled.div`\r\n  position: relative;\r\n  width: 25%;\r\n  margin-left: 5%;\r\n  color: #ffffff;\r\n  .title{\r\n    margin-bottom: 1em;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px){\r\n    width: 80%;\r\n  }\r\n`\r\n\r\nconst StyledContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 70%;\r\n  margin: 5vw auto;\r\n  text-align: center;\r\n  h3{\r\n    color: #006a71;\r\n    margin-bottom: 1em;\r\n  }\r\n  p{\r\n    margin: 1em 0;\r\n  }\r\n  a{\r\n    color: #ffffff;\r\n    background: #006a71;\r\n    user-select: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    border-radius: 6px;\r\n    padding: 0.8em 3em;\r\n    width: fit-content;\r\n    margin: auto;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px){\r\n    width: 80%;\r\n    margin: 10vw auto;\r\n  }\r\n`","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../../components/layout/layout\"\r\nimport Seo from \"../../components/layout/seo\"\r\nimport Post from \"../../components/types/post\"\r\n\r\nconst NoticiasPage = ({data}) => {\r\n  const hash = typeof window !== 'undefined' ? window.location.hash : '';\r\n  \r\n  return(\r\n    <Layout>\r\n      <Seo title=\"NotÃ­cias\"/>\r\n      {data.allMarkdownRemark.edges.map((data, i)=>(\r\n        <div key={\"Post:\" + i} id={data.node.fields.slug}>\r\n          {i!==0 && <div style={{height: \"10px\"}}/>}\r\n          <Post data={data.node.frontmatter} slug={data.node.fields.slug} selected={hash} text={data.node.html}/>\r\n        </div>\r\n      ))}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NoticiasPage\r\n\r\nexport const Json = graphql`\r\n  query noticias {\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            image {\r\n              childImageSharp{\r\n                gatsbyImageData(\r\n                  placeholder: BLURRED\r\n                  formats: [AUTO, WEBP, AVIF]\r\n                  width: 3840\r\n                )\r\n              }\r\n            }\r\n            imageM {\r\n              childImageSharp{\r\n                gatsbyImageData(\r\n                  placeholder: BLURRED\r\n                  formats: [AUTO, WEBP, AVIF]\r\n                  width: 3840\r\n                )\r\n              }\r\n            }\r\n            id\r\n            date(formatString: \"DD-MM-YYYY\")\r\n            data\r\n            btn\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}