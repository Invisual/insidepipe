{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/types/txtLnk.js","webpack://gatsby-starter-default/./src/components/contactos/contacts-form.js","webpack://gatsby-starter-default/./src/components/contactos/form.js","webpack://gatsby-starter-default/./src/components/contactos/map.js","webpack://gatsby-starter-default/./src/pages/contactos.js"],"names":["data","dark","inv","img","useBreakpoint","mobile","imgM","childImageSharp","gatsbyImageData","StyledTxtLnk","className","font","Array","isArray","title","style","fontStyle","text","map","i","undefined","key","btnTxt","to","btnLink","styled","props","css","contacts","geral","href","email","phone","comercial","emailC","phoneC","emailT","phoneT","producao","email1","email2","StyledContainer","StyledMap","src","contactosJson","form"],"mappings":"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","file":"component---src-pages-contactos-js-26e57f6335ffb499712a.js","sourcesContent":["import React from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\nimport * as font from \"../../fonts/fonts.module.scss\"\r\nimport Container from \"../bannerMOD/bannerMOD\"\r\nimport ButtonLink from \"../layout/linkBtns\"\r\n\r\nimport { useBreakpoint } from \"gatsby-plugin-breakpoints\"\r\n\r\nconst TxtLnk = ({data, dark, inv}) => {\r\n  return(\r\n    <Container img={!useBreakpoint().mobile ? data.img.childImageSharp.gatsbyImageData : data.imgM.childImageSharp.gatsbyImageData}>\r\n      <StyledTxtLnk inv={inv && +inv}>\r\n        <h3 className={!dark ? font.aH + \" title\" : font.aH + \" title dark-title\"}>{Array.isArray(data.title) ? <span>{data.title[0]}<span style={{fontStyle: \"italic\"}}>{data.title[1]}</span></span> : data.title}</h3>\r\n        <p className={!dark ? font.aB + \" text\" : font.aB + \" text dark\"}>\r\n          {data.text.map((data, i)=>(\r\n            <span className={i%2!==0 ? font.aM + \" bold\" : undefined} key={\"paragraph\" + i}>{data}</span>\r\n          ))}\r\n        </p>\r\n        {data.btnTxt && <ButtonLink to={data.btnLink} className={font.aH} dark={dark && +dark}>{data.btnTxt}</ButtonLink>}\r\n      </StyledTxtLnk>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TxtLnk\r\n\r\nconst StyledTxtLnk = styled.div`\r\n  position: relative;\r\n  width: 25%;\r\n  margin-left: 5%;\r\n  color: #ffffff;\r\n  ${props =>\r\n    props.inv &&\r\n    css`\r\n      margin-left: 70%;\r\n    `\r\n  }\r\n  .text{\r\n    margin: 2em 0;\r\n    white-space: pre-wrap;\r\n    .bold{\r\n      font-weight: bold;\r\n    }\r\n  }\r\n  .dark{\r\n    color: #000000;\r\n  }\r\n  .dark-title{\r\n    color: #006a71;\r\n  }\r\n  \r\n  @media only screen and (max-width: 768px){\r\n    width: 80%;\r\n    ${props =>\r\n      props.inv &&\r\n      css`\r\n        margin-left: 5%;\r\n      `\r\n    }\r\n  }\r\n`","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport * as font from \"../../fonts/fonts.module.scss\"\r\n\r\nimport Form from \"./form\"\r\n\r\nconst ContactsForm = ({data}) => {\r\n\r\n  return(\r\n    <StyledContainer>\r\n      <h3 className={font.aH + \" title\"}>{data.contacts.title}</h3>\r\n      <div className=\"contacts\">\r\n        <div className=\"block\">\r\n          <p className={font.aB}>{data.contacts.geral.title}</p>\r\n          <a href={data.contacts.geral.email[0]} className={font.aB}>{data.contacts.geral.email[1]}</a>\r\n          <a href={data.contacts.geral.phone[0]} className={font.aB}>{data.contacts.geral.phone[1]}</a>\r\n        </div>\r\n        <div className=\"block\">\r\n          <p className={font.aB}>{data.contacts.comercial.title}</p>\r\n          <a href={data.contacts.comercial.emailC[0]} className={font.aB}>{data.contacts.comercial.emailC[1]}</a>\r\n          <a href={data.contacts.comercial.phoneC[0]} className={font.aB}>{data.contacts.comercial.phoneC[1]}</a>\r\n          <a href={data.contacts.comercial.emailT[0]} className={font.aB}>{data.contacts.comercial.emailT[1]}</a>\r\n          <a href={data.contacts.comercial.phoneT[0]} className={font.aB}>{data.contacts.comercial.phoneT[1]}</a>\r\n        </div>\r\n        <div className=\"block\">\r\n          <p className={font.aB}>{data.contacts.producao.title}</p>\r\n          <a href={data.contacts.producao.email1[0]} className={font.aB}>{data.contacts.producao.email1[1]}</a>\r\n          <a href={data.contacts.producao.email2[0]} className={font.aB}>{data.contacts.producao.email2[1]}</a>\r\n          <a href={data.contacts.producao.phone[0]} className={font.aB}>{data.contacts.producao.phone[1]}</a>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Form data={data.form}/> */}\r\n    </StyledContainer>\r\n  )\r\n}\r\n\r\nexport default ContactsForm\r\n\r\nconst StyledContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  /* height: 36.6vw; */\r\n  /* display: flex; */\r\n  /* justify-content: space-between; */\r\n  padding: 3vw 5vw;\r\n  .title{color: #006a71;margin-bottom: 2vw;}\r\n  .contacts{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    /* align-items: center; */\r\n    width: 100%;\r\n    white-space: pre-wrap;\r\n    .block{\r\n      margin: 0;\r\n      a, p{\r\n        margin: 0.2em 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 768px){\r\n    .title{\r\n      padding: 10vw 10vw 0;\r\n    }\r\n    .contacts{\r\n      flex-direction: column;\r\n      padding: 0 10vw 5vw;\r\n      .block{\r\n        margin: 5vw 0;\r\n      }\r\n    }\r\n  }\r\n`","import React, { useState, useRef } from \"react\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport styled from \"styled-components\"\r\nimport * as font from \"../../fonts/fonts.module.scss\"\r\nimport { Button } from \"../layout/linkBtns\"\r\nimport CustomAxios from \"../../custom/axios\"\r\n\r\nconst Form = ({data}) => {\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const name = useRef(null);\r\n  const email = useRef(null);\r\n  const subject = useRef(null);\r\n  const message = useRef(null);\r\n  \r\n  var checker = [];\r\n  const checkValues = () => {\r\n    checker.forEach(element => {\r\n      element.current.style.border = \"none\";\r\n    });\r\n    checker=[];\r\n    let checkerTemp = [];\r\n    \r\n    if(!name.current.value){\r\n      checkerTemp.push(name);\r\n    }\r\n    if(!email.current.value || !checkEmail()){\r\n      checkerTemp.push(email);\r\n    }\r\n    checker = checkerTemp;\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    checkValues();\r\n    if(checker.length<1){\r\n      var formData = new FormData()\r\n      formData.append(\"name\", name.current.value)\r\n      formData.append(\"email\", email.current.value)\r\n      formData.append(\"subject\", subject.current.value)\r\n      formData.append(\"message\", message.current.value)\r\n\r\n      CustomAxios(\"https://invisual.pt/insidepipe-forms/form-contact.php\", formData, \"OBRIGADO PELA SUA MENSAGEM\").then((res) => successRes(res));\r\n      // CustomAxios(\"/assets/form-contact.php\", formData, \"OBRIGADO PELA SUA MENSAGEM\").then((res) => successRes(res));\r\n    }\r\n    else{\r\n      checker.forEach(element => {\r\n        element.current.style.border = \"solid 2px red\";\r\n      });\r\n    }\r\n  }\r\n  const successRes = (res) => {\r\n    setSuccess(true);\r\n  }\r\n\r\n  const checkEmail = () => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    return(re.test(email.current.value));\r\n  }\r\n\r\n  return(\r\n    <StyledContainer>\r\n      <CSSTransition in={!success} timeout={350} classNames={\"switchModal\"} unmountOnExit>\r\n        <div className=\"container\">\r\n          <input type=\"text\" ref={name} className={font.aH + \" small\"} placeholder={data.name}/>\r\n          <input type=\"text\" ref={email} className={font.aH + \" small\"} placeholder={data.email}/>\r\n          <input type=\"text\" ref={subject} className={font.aH + \" small\"} placeholder={data.subject}/>\r\n          <textarea type=\"text\" ref={message} className={font.aH + \" small\"} placeholder={data.message}/>\r\n          <p className={font.aH + \" legenda small\"}>{data.legenda}</p>\r\n          <Button className={font.aH + \" btn\"} dark onClick={handleSubmit}>{data.btn}</Button>\r\n        </div>\r\n      </CSSTransition>\r\n      <CSSTransition in={success} timeout={350} classNames={\"switchModal\"} unmountOnExit>\r\n        <h3 className={font.aH + \" success\"}>{data.success}</h3>\r\n      </CSSTransition>\r\n    </StyledContainer>\r\n  )\r\n}\r\n\r\nexport default Form\r\n\r\nconst StyledContainer = styled.div`\r\n  position: relative;\r\n  margin-right: 5vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 50vw;\r\n  .container{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n  input, textarea{\r\n    background-color: rgba(0, 105, 112, 0.1);\r\n    border: none;\r\n    border-radius: 6px;\r\n    margin: 0.5em 0;\r\n    height: 3em;\r\n    padding: 0 2em;\r\n    color: #6a737b;\r\n  }\r\n  textarea{\r\n    height: 7em;\r\n    resize: none;\r\n    padding-top: 0.8em;\r\n  }\r\n  .legenda{\r\n    color: #6a737b;\r\n  }\r\n  .btn{\r\n    align-self: flex-end;\r\n  }\r\n  .success{\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 50%;\r\n    transform: translate(50%, -50%);\r\n    color: #006a71;\r\n  }\r\n\r\n  /* react-transition-group */\r\n  .switchModal-enter{\r\n    opacity: 0 !important;\r\n  }\r\n  .switchModal-enter-active{\r\n    opacity: 1 !important;\r\n    transition: all 350ms ease-out;\r\n  }\r\n  .switchModal-exit{\r\n    opacity: 1 !important;\r\n  }\r\n  .switchModal-exit-active{\r\n    opacity: 0 !important;\r\n    transition: all 350ms ease-out;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px){\r\n    align-self: flex-end;\r\n    margin: 10vw 0 0;\r\n    width: 80vw;\r\n  }\r\n`","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Map = () => {\r\n  return(\r\n    <StyledMap>\r\n      <iframe src=\"https://snazzymaps.com/embed/325121\" className=\"map\" title=\"Mapa\"/>\r\n    </StyledMap>\r\n  )\r\n}\r\n\r\nexport default Map\r\n\r\nconst StyledMap = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 36.6vw;\r\n  .map{\r\n    width: 100%;\r\n    height: 100%;\r\n    border: none;\r\n  }\r\n  @media only screen and (max-width: 768px){\r\n    height: 80vw;\r\n  }\r\n`","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout/layout\"\r\nimport Seo from \"../components/layout/seo\"\r\nimport TxtLnk from \"../components/types/txtLnk\"\r\nimport Form from \"../components/contactos/contacts-form\"\r\nimport Map from \"../components/contactos/map\"\r\n\r\nconst ContactosPage = ({data}) => (\r\n  <Layout>\r\n    <Seo title=\"Contactos\"/>\r\n    <Map/>\r\n    <Form data={data.contactosJson.form}/>\r\n    {/* <TxtLnk data={data.contactosJson.banner1}/> */}\r\n  </Layout>\r\n)\r\n\r\nexport default ContactosPage\r\n\r\nexport const Json = graphql`\r\n  query contactos {\r\n    contactosJson{\r\n      banner1{\r\n        img{\r\n          childImageSharp{\r\n            gatsbyImageData(\r\n              placeholder: BLURRED\r\n              formats: [AUTO, WEBP, AVIF]\r\n              width: 3840\r\n            )\r\n          }\r\n        }\r\n        imgM{\r\n          childImageSharp{\r\n            gatsbyImageData(\r\n              placeholder: BLURRED\r\n              formats: [AUTO, WEBP, AVIF]\r\n              width: 3840\r\n            )\r\n          }\r\n        }\r\n        title\r\n        text\r\n        btnLink\r\n        btnTxt\r\n      }\r\n      form{\r\n        contacts{\r\n          title\r\n          geral{\r\n            title\r\n            email\r\n            phone\r\n          }\r\n          comercial{\r\n            title\r\n            emailC\r\n            phoneC\r\n            emailT\r\n            phoneT\r\n          }\r\n          producao{\r\n            title\r\n            email1\r\n            email2\r\n            phone\r\n          }\r\n        }\r\n        form{\r\n          name\r\n          email\r\n          subject\r\n          message\r\n          legenda\r\n          btn\r\n          success\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}