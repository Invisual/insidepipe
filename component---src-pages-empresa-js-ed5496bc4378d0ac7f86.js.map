{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/types/txtLnk.js","webpack://gatsby-starter-default/./src/components/types/videoLnk.js","webpack://gatsby-starter-default/./src/pages/empresa.js"],"names":["data","dark","inv","img","useBreakpoint","mobile","imgM","childImageSharp","gatsbyImageData","StyledTxtLnk","className","font","Array","isArray","title","style","fontStyle","text","map","i","undefined","key","btnTxt","to","btnLink","styled","props","css","video","VideoStyled","preload","poster","controls","autoPlay","playsInline","loop","muted","src","type","empresaJson","homelinks","height","videoSrc","light"],"mappings":"kMAwBA,IAhBe,SAAC,GAAuB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,IAC3B,OACE,gBAAC,IAAD,CAAWC,KAAMC,UAAgBC,OAAoDL,EAAKM,KAAKC,gBAAgBC,gBAArER,EAAKG,IAAII,gBAAgBC,iBACjE,gBAACC,EAAD,CAAcP,IAAKA,IAAQA,GACzB,sBAAIQ,UAAYT,EAA4BU,KAAU,oBAA/BA,KAAU,UAA2CC,MAAMC,QAAQb,EAAKc,OAAS,4BAAOd,EAAKc,MAAM,GAAG,wBAAMC,MAAO,CAACC,UAAW,WAAYhB,EAAKc,MAAM,KAAoBd,EAAKc,OACtM,qBAAGJ,UAAYT,EAA2BU,KAAU,aAA9BA,KAAU,SAC7BX,EAAKiB,KAAKC,KAAI,SAAClB,EAAMmB,GAAP,OACb,wBAAMT,UAAWS,EAAE,GAAI,EAAIR,KAAU,aAAUS,EAAWC,IAAK,YAAcF,GAAInB,OAGpFA,EAAKsB,QAAU,gBAAC,IAAD,CAAYC,GAAIvB,EAAKwB,QAASd,UAAWC,KAASV,KAAMA,IAASA,GAAOD,EAAKsB,WAQrG,IAAMb,EAAegB,oBAAH,4DAAGA,CAAH,2OAKd,SAAAC,GAAK,OACLA,EAAMxB,MACNyB,QADA,yBAqBE,SAAAD,GAAK,OACLA,EAAMxB,MACNyB,QADA,yB,kICzCN,EAVe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd,OACI,gBAACC,EAAD,KACI,yBAAOC,QAAQ,OAAOpB,UAAU,QAAQqB,OAAQ,GAAIC,UAAQ,EAACC,UAAQ,EAACC,aAAW,EAACC,MAAI,EAACC,OAAK,GACxF,0BAAQC,IAAKT,EAAOU,KAAK,iBAQnCT,EAAcJ,oBAAH,iEAAGA,CAAH,iQCWjB,EAlBoB,SAAC,GAAD,IAAGzB,EAAH,EAAGA,KAAH,OAChB,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAKc,MAAM,YACVd,EAAKuC,YAAYC,UAAUtB,KAAI,SAAClB,EAAMmB,GAAP,OAC5BnB,EAAK4B,MACD,uBAAKP,IAAKF,GACC,IAANA,GAAW,uBAAKJ,MAAO,CAAE0B,OAAQ,UAClC,gBAAC,EAAD,CAAUb,MAAO5B,EAAK0C,YAG1B,uBAAKrB,IAAKF,GACC,IAANA,GAAW,uBAAKJ,MAAO,CAAE0B,OAAQ,UAClC,gBAAC,IAAD,CAAQzC,KAAMA,EAAM2C,OAAK","file":"component---src-pages-empresa-js-ed5496bc4378d0ac7f86.js","sourcesContent":["import React from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\nimport * as font from \"../../fonts/fonts.module.scss\"\r\nimport Container from \"../bannerMOD/bannerMOD\"\r\nimport ButtonLink from \"../layout/linkBtns\"\r\n\r\nimport { useBreakpoint } from \"gatsby-plugin-breakpoints\"\r\n\r\nconst TxtLnk = ({data, dark, inv}) => {\r\n  return(\r\n    <Container img={!useBreakpoint().mobile ? data.img.childImageSharp.gatsbyImageData : data.imgM.childImageSharp.gatsbyImageData}>\r\n      <StyledTxtLnk inv={inv && +inv}>\r\n        <h3 className={!dark ? font.aH + \" title\" : font.aH + \" title dark-title\"}>{Array.isArray(data.title) ? <span>{data.title[0]}<span style={{fontStyle: \"italic\"}}>{data.title[1]}</span></span> : data.title}</h3>\r\n        <p className={!dark ? font.aB + \" text\" : font.aB + \" text dark\"}>\r\n          {data.text.map((data, i)=>(\r\n            <span className={i%2!==0 ? font.aM + \" bold\" : undefined} key={\"paragraph\" + i}>{data}</span>\r\n          ))}\r\n        </p>\r\n        {data.btnTxt && <ButtonLink to={data.btnLink} className={font.aH} dark={dark && +dark}>{data.btnTxt}</ButtonLink>}\r\n      </StyledTxtLnk>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TxtLnk\r\n\r\nconst StyledTxtLnk = styled.div`\r\n  position: relative;\r\n  width: 25%;\r\n  margin-left: 5%;\r\n  color: #ffffff;\r\n  ${props =>\r\n    props.inv &&\r\n    css`\r\n      margin-left: 70%;\r\n    `\r\n  }\r\n  .text{\r\n    margin: 2em 0;\r\n    white-space: pre-wrap;\r\n    .bold{\r\n      font-weight: bold;\r\n    }\r\n  }\r\n  .dark{\r\n    color: #000000;\r\n  }\r\n  .dark-title{\r\n    color: #006a71;\r\n  }\r\n  \r\n  @media only screen and (max-width: 768px){\r\n    width: 80%;\r\n    ${props =>\r\n      props.inv &&\r\n      css`\r\n        margin-left: 5%;\r\n      `\r\n    }\r\n  }\r\n`","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst TxtLnk = ({ video }) => {\r\n    return (\r\n        <VideoStyled>\r\n            <video preload=\"none\" className='video' poster={''} controls autoPlay playsInline loop muted>\r\n                <source src={video} type=\"video/mp4\" />\r\n            </video>\r\n        </VideoStyled>\r\n    )\r\n}\r\n\r\nexport default TxtLnk\r\n\r\nconst VideoStyled = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 36.6vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    background-color:#000;\r\n    \r\n    .video{\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute !important;\r\n        top: 0;\r\n        left: 0;\r\n    }\r\n\r\n    @media only screen and (max-width: 768px){\r\n        height: 125vw;\r\n    }\r\n`","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout/layout\"\r\nimport Seo from \"../components/layout/seo\"\r\nimport TxtLnk from \"../components/types/txtLnk\"\r\nimport VideoLnk from \"../components/types/videoLnk\"\r\n\r\nconst EmpresaPage = ({ data }) => (\r\n    <Layout>\r\n        <Seo title=\"Empresa\" />\r\n        {data.empresaJson.homelinks.map((data, i) => (\r\n            data.video ?\r\n                <div key={i}>\r\n                    {i !== 0 && <div style={{ height: \"10px\" }} />}\r\n                    <VideoLnk video={data.videoSrc} />\r\n                </div>\r\n                :\r\n                <div key={i}>\r\n                    {i !== 0 && <div style={{ height: \"10px\" }} />}\r\n                    <TxtLnk data={data} light />\r\n                </div>\r\n        ))}\r\n    </Layout>\r\n)\r\n\r\nexport default EmpresaPage\r\n\r\nexport const Json = graphql`\r\n  query empresa {\r\n    empresaJson{\r\n      homelinks{\r\n        video\r\n        videoSrc\r\n        img{\r\n          childImageSharp{\r\n            gatsbyImageData(\r\n              placeholder: BLURRED\r\n              formats: [AUTO, WEBP, AVIF]\r\n              width: 3840\r\n            )\r\n          }\r\n        }\r\n        imgM{\r\n          childImageSharp{\r\n            gatsbyImageData(\r\n              placeholder: BLURRED\r\n              formats: [AUTO, WEBP, AVIF]\r\n              width: 3840\r\n            )\r\n          }\r\n        }\r\n        title\r\n        text\r\n        btnLink\r\n        btnTxt\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}